apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'
apply plugin: 'checkstyle'

version = '0.1'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

war.archiveName = 'assignment-1.war'

eclipse.classpath.file {
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}

allprojects {

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        maven { url 'http://repo2.maven.org/maven2/' }
    }
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'mysql:mysql-connector-java:5.1.39'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'javax.servlet:jstl:1.1.2'
    compile 'taglibs:standard:1.1.2'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile 'commons-dbutils:commons-dbutils:1.6'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'cn.apiclub.tool:simplecaptcha:1.2.2'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type:Jar, dependsOn: classes){
    classifier = 'sources'
    from sourceSets.main.allJava.srcDirs
    include "**/*.java"
}

task javadocJar(type: Jar) {
    classifier = "javadoc"
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    exclude('log4j.properties')
}

jettyRun.daemon = false
jettyRun.httpPort = 4488
[jettyRun,jettyStop]*.stopPort = 4489
[jettyRun,jettyStop]*.stopKey = 'foo'

